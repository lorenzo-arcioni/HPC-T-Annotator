import sys
import os
import shutil
import subprocess as sp

from datetime import datetime
		
def main():

	outformat  = {}
	inputfile  = "../../input/input.fa"
	diamond    =  {}
	binary     = "{}"
	database   = "{}"
	tool       = "{}"
	threads    = "{}"
	processes  =  {}
	wlm        = "{}"
	wlm_header = "{}"
	dao        = "{}"
	bao        = "{}"

	pwd           = os.getcwd() # Get current path
	generallog    = os.path.join(pwd, "general.log")
	headers_file  = os.path.join(pwd, "headers.txt")
	pwd = tmpdir  = os.path.join(pwd, "tmp") # Add to path the directory name

	diamond   = int(diamond) # Use or not use Diamond

	# Getting al the headers from headers file
	with open(headers_file) as f:
		keys = f.read().splitlines()
		f.close()
	
	# Creation of the tmp dir
	if os.path.exists(pwd):  # If tmp already exists delete all file inside it
		shutil.rmtree("tmp")
	os.mkdir("tmp")
	os.chdir(tmpdir)
	
	# Adding the outformat to the final file
	with open(pwd+"/final_blast.tsv", "w") as f:
		outfmt_list = outformat.split(" ")
		f.write("\t".join(outfmt_list[1:]))
		f.write("\n")
		f.close()

	# Creation of the processes execution files
	for p in range(processes):
		os.mkdir(str(p))
		os.chdir(str(p))

		with open("creator.awk", 'w', encoding='utf-8') as f:
			p_keys = [keys[x] for x in range(len(keys)) if x % processes == p]

			for k in p_keys:
				f.write("$0 == \"" + k + "\"{{print $0; while(getline == 1 && substr($1,1,1) != \">\" ){{print $0}}}}\n")
			f.close()
		
		with open("script.sh", 'w', encoding='utf-8') as script:
			script.write("#!/bin/bash" + '\n')

			script.write(wlm_header) # Workload manager header

			if wlm == "slurm":
				script.write("#SBATCH --cpus-per-task=" + str(threads) + '\n')
				script.write("#SBATCH --job-name=PA_proc-" + str(p) + '\n')

			script.write("awk -f ./creator.awk " + inputfile + " > contigs.fa\n")

			if diamond:
				script.write("/usr/bin/time -f \"%e\" " + binary + " " + tool + " -q contigs.fa -d " + database + " -o blast.out" + 
												" -p " + str(threads) + " -f " + outformat + " " + dao + "\n") 
			else:
				script.write("/usr/bin/time -f \"%e\" " + binary + " -query contigs.fa -db " + database + " -out blast.out" +
												" -num_threads " + str(threads) + " -outfmt \"" + outformat + "\" " + bao +"\n")
			script.write("touch finish_flag")
			script.close()

		sp.call("chmod 777 ./script.sh", shell=True)	 #Make executable the script

		#Run the script
		if wlm == "slurm":
			sp.call("sbatch ./script.sh", shell=True)
		elif wlm == "htcondor":
			pass
		else:
			sp.call("bash ./script.sh 2> general.err &", shell=True)

		os.chdir("../")
	os.chdir("../")

	sp.call("chmod 777 ./control_script.sh", shell=True)	 #Make executable the script
	
	#Run the control script
	if wlm == "slurm":
		sp.call("sbatch ./control_script.sh", shell=True)
	elif wlm == "htcondor":
		pass
	else:
		sp.call("bash ./control_script.sh", shell=True)
	
if __name__ == '__main__':
    sys.exit(main())
